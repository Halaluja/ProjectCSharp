@using WebApp.Models
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<meta name="google-signin-client_id" content="761735900256-c5blrp9cn598t6p59t6e90bfopouhkuf.apps.googleusercontent.com">
@{
    //var data = (Login)ViewData["USER"];
    var user = (Account)Session["USER"];
}
<link href="~/Content/Style/index.css" rel="stylesheet" />
<nav class="navbar navbar-expand-lg navbar-dark bg-dark menu" style="z-index: 999">
    <a class="navbar-brand" href="/Search/Search">Masion</a>
    <div class="collapse navbar-collapse" id="navbarText">
        <ul class="navbar-nav mr-auto">
        </ul>
        <ul style="height: 100%; margin-top: 15px">
            <li style="height: 100%" class="nav-item dropdown">
                <a style="color:#fff; line-height: 100%" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Hello @user.UserName</a>
                <div class="dropdown-menu" style="z-index: 999; transform: translateX(-30px)">
                    <a class="dropdown-item" href="/Motel/ViewMotel/">My Motel</a>
                    <a class="dropdown-item" href="/Account/AccountPage/">My Profile</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="" onclick="Logout()">Logout</a>
                </div>
            </li>
        </ul>
    </div>
</nav>
<div class="container-fluid">
    <div class="row">
        <div class="input-group mb-3" id="floating-panel">
            <input id="address" placeholder="Find Motel's Address" type="text" class="form-control" aria-label="Recipient's username" aria-describedby="button-addon2">
            <div class="input-group-append">
                <button id="submit" class="btn btn-primary" type="button" id="button-addon2">Search</button>
            </div>
        </div>
        <div class="col-12 myMap" id="map">

        </div>
        <!--<input type="button" onclick="currentLocate()" value="Current"/>-->
    </div>
</div>
<div id="MotelInfo" class="card" style="width: 18rem;">
    <button onclick="closeCard()" type="button" class="close"
            aria-label="Close" style="text-align:right; margin-right: 5px; outline:none;">
        <span aria-hidden="true">&times;</span>
    </button>
    <img src="" class="card-img-top" alt="..." id="img">
    <div class="card-body">
        <input type="hidden" id="motelId" name="name" value="" />
        <h5 class="card-title" id="motelName" name="Default">Card title</h5>
        <p class="card-text" id="motelAdd">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        <a href="#" class="btn btn-primary" onclick="showDetail()">View more</a>
    </div>
</div>
<div id="detail">
    <button onclick="closeDetaild()" type="button" class="close"
            aria-label="Close" id="buttonClose">
        <span aria-hidden="true">&times;</span>
    </button>
    <div class="container-fluid" id="detailEdit">
        <div class="row" style="background-color: gray">
            <div class="col-5 mycol" style="width: 100%">
                <div class="card" style="width: 18rem;" id="motelDetaild">
                    <div class="card-body">
                        <h5 class="card-title" id="cardName"></h5>
                        <p class="card-text" id="cardAdd"></p>
                    </div>
                    <ul class="list-group list-group-flush" style="height: 60%;transform: translateY(-15px)">
                        <li class="list-group-item" style="height: 100%; overflow-y: scroll" id="cardInfo">
                           
                        </li>
                    </ul>
                    <div class="card-body" id="more">
                        <p id="cardInternet">Card link</p>
                        <p id="cardWater">Another link</p>
                        <p id="cardElectric">Card link</p>
                        <p id="cardParkingPlace">Another link</p>
                    </div>
                    <style>
                        #more p {
                            width: 48%;
                            float: left;
                        }
                    </style>
                </div>
            </div>
            <div class="col-7 mycol">
                <div class="d-flex flex-wrap justify-content-center" style="padding-top:10px">
                    <div class="card" style="width: 18rem;margin: 0px 3px">
                        <img src="..." class="card-img-top" alt="...">
                        <div class="card-body">
                            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        </div>
                    </div>
                    <div class="card" style="width: 18rem;margin: 0px 3px">
                        <img src="..." class="card-img-top" alt="...">
                        <div class="card-body">
                            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        </div>
                    </div>
                    <div class="card" style="width: 18rem;margin: 0px 3px">
                        <img src="..." class="card-img-top" alt="...">
                        <div class="card-body">
                            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        </div>
                    </div>
                    <div class="card" style="width: 18rem;margin: 0px 3px">
                        <img src="..." class="card-img-top" alt="...">
                        <div class="card-body">
                            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        </div>
                    </div>
                    <div class="card" style="width: 18rem;margin: 0px 3px">
                        <img src="..." class="card-img-top" alt="...">
                        <div class="card-body">
                            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="~/Content/Javascript/FacebookConnect.js"></script>
<script type="text/javascript">
    function Logout() {
        if (@user.Type === 1) {

        } else if (@user.Type === 2) {
            FB.logout(function (response) {

            });
        } else if (@user.Type === 3) {
            var auth2 = gapi.auth2.getAuthInstance();
	        auth2.signOut().then(function () {
       	        auth2.disconnect();
	       });
        }
        window.location = "/Account/Index";
    }
</script>
<script>
    var options = {
        zoom: 15,
        center: { lat: 10.794701621548974, lng: 106.71803147657675 }
    }
    var map;
    var markerList = [];
    var geocoder;

    var motels = [];
    var motelsNearDevice = [];

    var cardBox = false;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), options);
        geocoder = new google.maps.Geocoder();
        document.getElementById('submit').addEventListener('click', function () {
            geocodeAddress(geocoder, map);
        });
        // Listen for click on map
        google.maps.event.addListener(map, 'click', function (event) {
            // Add marker
            createMarker(event.latLng);
            console.log(event.latLng.lat());
            console.log(event.latLng.lng());
        });
        //get center location of map when map is moved
        google.maps.event.addListener(map, "center_changed", function () {
            var center = this.getCenter();
            var latitude = center.lat();
            var longitude = center.lng();
        });
        var clickMarker;
        function createMarker(location) {
            if (clickMarker) {
                clickMarker.setPosition(location);
            } else {
                clickMarker = new google.maps.Marker({
                    position: location,
                    map: map
                });
            }
            map.zoom = map.getZoom();
        }
        function addMarker(props) {
            var marker = new google.maps.Marker({
                position: props.coords,
                map: map,
                //icon:props.iconImage
            });
            // Check for customicon
            if (props.iconImage) {
                // Set icon image
                marker.setIcon(props.iconImage);
            }

            // Check content
            if (props.content) {
                var infoWindow = new google.maps.InfoWindow({
                    content: props.content
                });
                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });
            }
        }

        //function get LatLng
        function getLatLngFromMarker() {
            return clickMarker.getPosition();
        }

        map.addListener('dragend', function () {
            var NewMapCenter = map.getCenter();
            var latitude = NewMapCenter.lat();
            var longitude = NewMapCenter.lng();
            loadDataMouseDrag(latitude, longitude);
        });

        loadDataMouseDrag(map.getCenter().lat(), map.getCenter().lng());
    };
    //----------------
    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }
    //---------------------
    function getMotel(id) {
        for (var i = 0; i < motels.length; i++) {
            if (motels[i].ID === id) {
                return motels[i];
            }
        }
    }
    function loadDataMouseDrag(lat, lng) {
        motels = [];
        for (var i = 0; i < markerList.length; i++) {
            markerList[i].setMap(null);
        }
        markerList = [];
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var tmp = JSON.parse(this.responseText);
                for (var i = 0; i < tmp.length; i++) {
                    motels.push(tmp[i]);
                }
                //loadMotel();
                loadToMap();
            }
        };
        xmlhttp.open("GET", "/Search/GetMotelByPosition?lat=" + lat + "&lng=" + lng, true);
        xmlhttp.send();

    }
    function loadToMap() {
        var image = new google.maps.MarkerImage('../../Content/Image/placeholder.svg',
            null, null, null, new google.maps.Size(35, 35));
        for (var i = 0; i < motels.length; i++) {
            var myLang = { lat: parseFloat(motels[i].Latitude), lng: parseFloat(motels[i].Longitude) };
            var marker = new google.maps.Marker({
                position: myLang,
                icon: image
            });
            marker.set("id", motels[i].ID);
            marker.setMap(map);
            markerList.push(marker);
            marker.addListener("click", function () {
                loadMotelDataToMiniCard(this);
            });
        }
    }

    var card;
    function loadMotelDataToMiniCard(marker) {
        card = document.getElementById("MotelInfo");
        card.classList.add("moveUp");
        var tmp = getMotel(marker.id);
        var img = document.getElementById('img');
        if (tmp !== null) {
            document.getElementById("motelName").innerHTML = tmp.Name;
            document.getElementById("motelAdd").innerHTML = tmp.Address;
            document.getElementById("motelId").value = tmp.ID;
            img.src = "https://manageimage.blob.core.windows.net/" + tmp.ID.toLowerCase() + "/20190910_095415_5064344_0.jpg";
        } else {
            console.log("Error");
        }

    }
    function closeCard() {
        cardBox = false;
        var card = document.getElementById("MotelInfo");
        card.classList.remove("moveUp");
    }
    //get current location-----------------------------
    var current = false;
    var DeviceLat;
    var DeviceLng;
    function currentLocate() {
        navigator.geolocation.getCurrentPosition(function (position) {
            //---
            if (position.coords.latitude === DeviceLat && position.coords.longitude === DeviceLng) {
                current = true;
            } else {
                current = false;
            }
            if (!current) {
                DeviceLat = position.coords.latitude;
                DeviceLng = position.coords.longitude;
                //--
                var myLang = { lat: DeviceLat, lng: DeviceLng };
                var image = new google.maps.MarkerImage('../../Content/Image/current-location.svg',
                    null, null, null, new google.maps.Size(20, 20));
                //---
                var marker = new google.maps.Marker({
                    position: myLang,
                    icon: image
                });
                marker.setMap(map);
                map.setCenter(new google.maps.LatLng(DeviceLat, DeviceLng));

                console.log(position);
                console.log(position.coords.longitude);
                console.log(position.coords.latitude);
                //E Phu May lamf gi vs ham nay thi chinh nha
            }
        }, errorCallback, { timeout: 10000 });
    }
    function errorCallback() {
        console.log("ERROR");
    }
    function showDetail() {
        var detail = document.getElementById("detail");
        detail.classList.add("moveUpDetaild");
        closeCard();
        var cardId = document.getElementById("motelId").value;
        var cardName = document.getElementById("cardName");
        var cardAdd = document.getElementById("cardAdd");
        var cardInfo = document.getElementById("cardInfo");
        var motel = getMotel(cardId);
        cardName.innerHTML = motel.Name;
        cardAdd.innerHTML = motel.Address;
        cardInfo.innerHTML = motel.Information;
        document.getElementById("cardInternet").innerHTML = "Internet : " + motel.Internet;
        document.getElementById("cardElectric").innerHTML = "Electric : " + motel.Electric;
        document.getElementById("cardWater").innerHTML = "Water : " + motel.Water;
        document.getElementById("cardParkingPlace").innerHTML = "PakingPlace : " + motel.ParkingPlace;
    }
    function closeDetaild() {
        var detail = document.getElementById("detail");
        detail.classList.remove("moveUpDetaild");
    }
</script>
<script>
    var rooms = [];
    function loadRoom(id) {
        rooms = [];
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var tmp = JSON.parse(this.responseText);
                for (var i = 0; i < tmp.length; i++) {
                    rooms.push(tmp[i]);
                }
            }
        };
        xmlhttp.open("GET", "/Room/getRoom?id=" + id, true);
        xmlhttp.send();
    }
</script>
<script src="https://apis.google.com/js/platform.js" async defer></script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBwoO1VqzqARJXzbRItIPDTvDCEWzHsXUQ&callback=initMap">
</script>
